plugins {
    id 'com.android.application'
}

android {
    namespace 'com.mh.test'
    compileSdk 33

    defaultConfig {
        applicationId "com.shark.template"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig = true
        aidl = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    implementation("com.google.code.gson:gson:2.10.1")
    compileOnly 'de.robv.android.xposed:api:82'

//    compileOnly 'de.robv.android.xposed:api:82:sources'
}

ext {
    //push的路径
    pushPath = "/data/local/tmp/"
    jarName = "test.apk"
    targetPackage = "com.mh.test"
}


//将相关文件push到手机
task pushApkRunDevice(dependsOn: 'assembleDebug') {
    group 'Online-Device'
    description 'Debug with online device without remote server'

    doLast {
        //push到手机上
        def info = "adb push ${new File(project.buildDir, "/outputs/apk/debug/app-debug.apk").canonicalPath} $pushPath$jarName".execute().text
        println "Push dex:$info"

        // 获取当前构建变体的 packageName
        def applicationId = android.applicationVariants.find { it.name == 'debug' }?.applicationId
        if (applicationId == null) {
            throw new GradleException("Could not find applicationId for debug variant.")
        }

        println "Package Name: $applicationId"

        def executeCmd = "adb shell service call serial 6 s16 \"$applicationId\" s16 \"$targetPackage\""
        println "executeCmd: $executeCmd"

        info = executeCmd.execute().text
        println "service call:$info"

    }
}
